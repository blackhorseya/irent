basePath: /api
definitions:
  cars.listCarsResp:
    properties:
      list:
        items:
          $ref: '#/definitions/model.Car'
        type: array
      total:
        type: integer
    type: object
  er.Error:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  model.Arrears:
    properties:
      records:
        items:
          $ref: '#/definitions/model.ArrearsRecord'
        type: array
      total_amount:
        type: integer
    type: object
  model.ArrearsRecord:
    properties:
      order_no:
        type: string
      total_amount:
        type: integer
    type: object
  model.Car:
    properties:
      car_of_area:
        type: string
      car_type:
        type: string
      car_type_name:
        type: string
      distance:
        type: number
      id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      project_id:
        type: string
      project_name:
        type: string
      seat:
        type: integer
    type: object
  model.Lease:
    properties:
      car_id:
        type: string
      car_latitude:
        type: number
      car_longitude:
        type: number
      "no":
        type: string
      status:
        $ref: '#/definitions/model.LeaseStatus'
    type: object
  model.LeaseStatus:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - LeaseStatus_LEASE_STATUS_UNSPECIFIED
    - LeaseStatus_LEASE_STATUS_ACTIVE
    - LeaseStatus_LEASE_STATUS_EXPIRED
  model.Profile:
    properties:
      access_token:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  orders.bookCarRequest:
    properties:
      circularly:
        type: boolean
      id:
        type: string
      project_id:
        type: string
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
info:
  contact:
    email: blackhorseya@gmail.com
    name: sean.zheng
    url: https://blog.seancheng.space
  description: API for IRent
  license:
    name: GPL-3.0
    url: https://spdx.org/licenses/GPL-3.0-only.html
  title: IRent API
  version: 0.0.1
paths:
  /v1/arrears/{id}:
    get:
      consumes:
      - application/json
      description: Get arrears by user
      parameters:
      - description: ID of user
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Arrears'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.Error'
      security:
      - ApiKeyAuth: []
      summary: Get arrears by user
      tags:
      - Billing
  /v1/auth/login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Login
      parameters:
      - description: user id
        in: formData
        name: id
        required: true
        type: string
      - description: user password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Profile'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.Error'
      summary: Login
      tags:
      - Account
  /v1/auth/me:
    get:
      consumes:
      - application/json
      description: Get me profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Profile'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/er.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.Error'
      security:
      - ApiKeyAuth: []
      summary: Get me profile
      tags:
      - Account
  /v1/cars:
    get:
      consumes:
      - application/json
      description: List cars
      parameters:
      - default: 1
        description: page
        in: query
        name: page
        type: integer
      - default: 5
        description: size
        in: query
        name: size
        type: integer
      - default: 0
        description: latitude
        in: query
        name: latitude
        type: number
      - default: 0
        description: longitude
        in: query
        name: longitude
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/cars.listCarsResp'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.Error'
      summary: List cars
      tags:
      - Rental
  /v1/orders:
    get:
      consumes:
      - application/json
      description: List all lease
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Lease'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.Error'
      security:
      - ApiKeyAuth: []
      summary: List all lease
      tags:
      - Orders
    post:
      consumes:
      - application/json
      description: Book a car
      parameters:
      - description: information of car
        in: body
        name: car
        required: true
        schema:
          $ref: '#/definitions/orders.bookCarRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Lease'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.Error'
      security:
      - ApiKeyAuth: []
      summary: Book a car
      tags:
      - Orders
  /v1/orders/{id}:
    delete:
      consumes:
      - application/json
      description: Cancel a booking by id
      parameters:
      - description: ID of booking
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.Error'
      security:
      - ApiKeyAuth: []
      summary: Cancel a booking by id
      tags:
      - Orders
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
