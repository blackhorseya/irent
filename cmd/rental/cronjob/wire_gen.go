// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/blackhorseya/irent/internal/adapter/rental/cronjob"
	"github.com/blackhorseya/irent/internal/app/domain/rental/biz"
	"github.com/blackhorseya/irent/internal/app/domain/rental/biz/repo"
	"github.com/blackhorseya/irent/internal/pkg/config"
	"github.com/blackhorseya/irent/internal/pkg/httpx"
	"github.com/blackhorseya/irent/internal/pkg/log"
	"github.com/blackhorseya/irent/internal/pkg/storage/mariadb"
	"github.com/google/wire"
)

// Injectors from wire.go:

func CreateService(path2 string) (*Service, error) {
	viper, err := config.NewConfig(path2)
	if err != nil {
		return nil, err
	}
	options, err := log.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	logger, err := log.NewLogger(options)
	if err != nil {
		return nil, err
	}
	cronjobOptions, err := cronjob.NewOptions(viper, logger)
	if err != nil {
		return nil, err
	}
	repoOptions, err := repo.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	client := httpx.NewClient()
	mariadbOptions, err := mariadb.NewOptions(viper, logger)
	if err != nil {
		return nil, err
	}
	db, err := mariadb.NewMariadb(mariadbOptions, logger)
	if err != nil {
		return nil, err
	}
	iRepo := repo.NewImpl(repoOptions, client, db)
	iBiz := biz.NewImpl(iRepo)
	adaptersCronjob := cronjob.NewImpl(cronjobOptions, logger, iBiz)
	service, err := NewService(logger, adaptersCronjob)
	if err != nil {
		return nil, err
	}
	return service, nil
}

// wire.go:

var providerSet = wire.NewSet(config.ProviderSet, log.ProviderSet, httpx.ClientSet, mariadb.ProviderSet, cronjob.RentalSet, biz.RentalSet, repo.RentalSet, NewService)
