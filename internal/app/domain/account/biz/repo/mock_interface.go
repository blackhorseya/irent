// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package repo is a generated GoMock package.
package repo

import (
	reflect "reflect"

	contextx "github.com/blackhorseya/irent/pkg/contextx"
	model "github.com/blackhorseya/irent/pkg/entity/domain/account/model"
	gomock "github.com/golang/mock/gomock"
)

// MockIRepo is a mock of IRepo interface.
type MockIRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIRepoMockRecorder
}

// MockIRepoMockRecorder is the mock recorder for MockIRepo.
type MockIRepoMockRecorder struct {
	mock *MockIRepo
}

// NewMockIRepo creates a new mock instance.
func NewMockIRepo(ctrl *gomock.Controller) *MockIRepo {
	mock := &MockIRepo{ctrl: ctrl}
	mock.recorder = &MockIRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRepo) EXPECT() *MockIRepoMockRecorder {
	return m.recorder
}

// GetMemberStatus mocks base method.
func (m *MockIRepo) GetMemberStatus(ctx contextx.Contextx, token string) (*model.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMemberStatus", ctx, token)
	ret0, _ := ret[0].(*model.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMemberStatus indicates an expected call of GetMemberStatus.
func (mr *MockIRepoMockRecorder) GetMemberStatus(ctx, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMemberStatus", reflect.TypeOf((*MockIRepo)(nil).GetMemberStatus), ctx, token)
}

// Login mocks base method.
func (m *MockIRepo) Login(ctx contextx.Contextx, id, password string) (*model.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", ctx, id, password)
	ret0, _ := ret[0].(*model.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login.
func (mr *MockIRepoMockRecorder) Login(ctx, id, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockIRepo)(nil).Login), ctx, id, password)
}
